// <auto-generated />
using System;
using ArtGalleryECommerce.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ArtGalleryECommerce.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20190527223340_thirdMigration")]
    partial class thirdMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ArtGalleryECommerce.Models.Artist", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country");

                    b.Property<DateTime>("CreationDate");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<string>("Surname");

                    b.HasKey("ID");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("ArtGalleryECommerce.Models.Cart", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate");

                    b.Property<int>("UserID");

                    b.HasKey("ID");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("ArtGalleryECommerce.Models.Product", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArtistID");

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Image")
                        .IsRequired();

                    b.Property<bool>("IsActive");

                    b.Property<double>("Price");

                    b.Property<string>("ProductDescription");

                    b.Property<string>("ProductName")
                        .IsRequired();

                    b.Property<string>("ProductSize")
                        .IsRequired();

                    b.Property<int>("ProductTypeID");

                    b.HasKey("ID");

                    b.ToTable("Products");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Product");
                });

            modelBuilder.Entity("ArtGalleryECommerce.Models.ProductType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Type");

                    b.HasKey("ID");

                    b.ToTable("ProductTypes");

                    b.HasDiscriminator<string>("Discriminator").HasValue("ProductType");
                });

            modelBuilder.Entity("ArtGalleryECommerce.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("CitizenshipNo");

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("EMail");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<string>("Nationality");

                    b.Property<string>("Password");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("Surname");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ArtGalleryECommerce.Models.UserCart", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CartID");

                    b.Property<int>("ProductID");

                    b.Property<int>("UserID");

                    b.HasKey("ID");

                    b.ToTable("UserCarts");
                });

            modelBuilder.Entity("ArtGalleryECommerce.Models.ViewModels.ProductViewModel", b =>
                {
                    b.HasBaseType("ArtGalleryECommerce.Models.Product");


                    b.ToTable("ProductViewModel");

                    b.HasDiscriminator().HasValue("ProductViewModel");
                });

            modelBuilder.Entity("ArtGalleryECommerce.Models.ViewModels.ProductTypeViewModel", b =>
                {
                    b.HasBaseType("ArtGalleryECommerce.Models.ProductType");


                    b.ToTable("ProductTypeViewModel");

                    b.HasDiscriminator().HasValue("ProductTypeViewModel");
                });
#pragma warning restore 612, 618
        }
    }
}
